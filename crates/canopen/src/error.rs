use crate::prelude::*;

impl CanAbortCode {
    pub fn code(&self) -> i32 {
        match *self {
            CanAbortCode::ToggleBitNotAlternated => 0x0503_0000,
            CanAbortCode::SdoProtocolTimedOut => 0x0504_0000,
            CanAbortCode::CommandSpecifierNotValidOrUnknown => 0x0504_0001,
            CanAbortCode::InvalidBlockSize => 0x0504_0002,
            CanAbortCode::InvalidSequenceNumber => 0x0504_0003,
            CanAbortCode::CRCError => 0x0504_0004,
            CanAbortCode::OutOfMemory => 0x0504_0005,
            CanAbortCode::UnsupportedAccessToObject => 0x0601_0000,
            CanAbortCode::AttemptToReadWriteOnlyObject => 0x0601_0001,
            CanAbortCode::AttemptToWriteReadOnlyObject => 0x0601_0002,
            CanAbortCode::ObjectDoesNotExistInObjectDictionary => 0x0602_0000,
            CanAbortCode::ObjectCannotBeMappedToPDO => 0x0604_0041,
            CanAbortCode::ExceedPDOSize => 0x0604_0042,
            CanAbortCode::GeneralParameterIncompatibility => 0x0604_0043,
            CanAbortCode::GeneralInternalIncompatibility => 0x0604_0047,
            CanAbortCode::HardwareError => 0x0606_0000,
            CanAbortCode::DataTypeMismatchLengthMismatch => 0x0607_0010,
            CanAbortCode::DataTypeMismatchLengthTooHigh => 0x0607_0012,
            CanAbortCode::DataTypeMismatchLengthTooLow => 0x0607_0013,
            CanAbortCode::SubIndexDoesNotExist => 0x0609_0011,
            CanAbortCode::ValueRangeExceeded => 0x0609_0030,
            CanAbortCode::ValueWrittenTooHigh => 0x0609_0031,
            CanAbortCode::ValueWrittenTooLow => 0x0609_0032,
            CanAbortCode::MaxValueLessThanMinValue => 0x0609_0036,
            CanAbortCode::GeneralError => 0x0800_0000,
            CanAbortCode::DataTransferOrStoreFailed => 0x0800_0020,
            CanAbortCode::DataTransferOrStoreFailedDueToLocalControl => 0x0800_0021,
            CanAbortCode::DataTransferOrStoreFailedDueToDeviceState => 0x0800_0022,
            CanAbortCode::ObjectDictionaryGenerationFailedOrNotPresent => 0x0800_0023,

            // Only used in the project
            CanAbortCode::Other => 0x0000_0000,
        }
    }

    pub fn description(&self) -> &'static str {
        match *self {
            CanAbortCode::ToggleBitNotAlternated => "Toggle bit not alternated",
            CanAbortCode::SdoProtocolTimedOut => "SDO protocol timed out",
            CanAbortCode::CommandSpecifierNotValidOrUnknown => "Client/server command specifier not valid or unknown",
            CanAbortCode::InvalidBlockSize => "Invalid block size (block mode only)",
            CanAbortCode::InvalidSequenceNumber => "Invalid sequence number (block mode only)",
            CanAbortCode::CRCError => "CRC error (block mode only)",
            CanAbortCode::OutOfMemory => "Out of memory",
            CanAbortCode::UnsupportedAccessToObject => "Unsupported access to an object",
            CanAbortCode::AttemptToReadWriteOnlyObject => "Attempt to read a write only object",
            CanAbortCode::AttemptToWriteReadOnlyObject => "Attempt to write a read only object",
            CanAbortCode::ObjectDoesNotExistInObjectDictionary => "Object does not exist in the object dictionary",
            CanAbortCode::ObjectCannotBeMappedToPDO => "Object cannot be mapped to the PDO",
            CanAbortCode::ExceedPDOSize => "The number and length of the objects to be mapped would exceed PDO length",
            CanAbortCode::GeneralParameterIncompatibility => "General parameter incompatibility reason",
            CanAbortCode::GeneralInternalIncompatibility => "General internal incompatibility in the device",
            CanAbortCode::HardwareError => "Access failed due to a hardware error",
            CanAbortCode::DataTypeMismatchLengthMismatch => "Data type does not match; length of service parameter does not match",
            CanAbortCode::DataTypeMismatchLengthTooHigh => "Data type does not match; length of service parameter too high",
            CanAbortCode::DataTypeMismatchLengthTooLow => "Data type does not match; length of service parameter too low",
            CanAbortCode::SubIndexDoesNotExist => "Sub-index does not exist",
            CanAbortCode::ValueRangeExceeded => "Value range of parameter exceeded (only for write access)",
            CanAbortCode::ValueWrittenTooHigh => "Value of parameter written too high",
            CanAbortCode::ValueWrittenTooLow => "Value of parameter written too low",
            CanAbortCode::MaxValueLessThanMinValue => "Maximum value is less than minimum value",
            CanAbortCode::GeneralError => "General error",
            CanAbortCode::DataTransferOrStoreFailed => "Data cannot be transferred or stored to the application",
            CanAbortCode::DataTransferOrStoreFailedDueToLocalControl => "Data cannot be transferred or stored to the application because of local control",
            CanAbortCode::DataTransferOrStoreFailedDueToDeviceState => "Data cannot be transferred or stored to the application because of the present device state",
            CanAbortCode::ObjectDictionaryGenerationFailedOrNotPresent => "Object dictionary dynamic generation fails or no object dictionary is present (e.g. object dictionary is generated from file and generation fails because of a file error)",

            CanAbortCode::Other => "Other",
        }
    }

    pub fn from_code(code: u32) -> Option<Self> {
        match code {
            0x0503_0000 => Some(CanAbortCode::ToggleBitNotAlternated),
            0x0504_0000 => Some(CanAbortCode::SdoProtocolTimedOut),
            0x0504_0001 => Some(CanAbortCode::CommandSpecifierNotValidOrUnknown),
            0x0504_0002 => Some(CanAbortCode::InvalidBlockSize),
            0x0504_0003 => Some(CanAbortCode::InvalidSequenceNumber),
            0x0504_0004 => Some(CanAbortCode::CRCError),
            0x0504_0005 => Some(CanAbortCode::OutOfMemory),
            0x0601_0000 => Some(CanAbortCode::UnsupportedAccessToObject),
            0x0601_0001 => Some(CanAbortCode::AttemptToReadWriteOnlyObject),
            0x0601_0002 => Some(CanAbortCode::AttemptToWriteReadOnlyObject),
            0x0602_0000 => Some(CanAbortCode::ObjectDoesNotExistInObjectDictionary),
            0x0604_0041 => Some(CanAbortCode::ObjectCannotBeMappedToPDO),
            0x0604_0042 => Some(CanAbortCode::ExceedPDOSize),
            0x0604_0043 => Some(CanAbortCode::GeneralParameterIncompatibility),
            0x0604_0047 => Some(CanAbortCode::GeneralInternalIncompatibility),
            0x0606_0000 => Some(CanAbortCode::HardwareError),
            0x0607_0010 => Some(CanAbortCode::DataTypeMismatchLengthMismatch),
            0x0607_0012 => Some(CanAbortCode::DataTypeMismatchLengthTooHigh),
            0x0607_0013 => Some(CanAbortCode::DataTypeMismatchLengthTooLow),
            0x0609_0011 => Some(CanAbortCode::SubIndexDoesNotExist),
            0x0609_0030 => Some(CanAbortCode::ValueRangeExceeded),
            0x0609_0031 => Some(CanAbortCode::ValueWrittenTooHigh),
            0x0609_0032 => Some(CanAbortCode::ValueWrittenTooLow),
            0x0609_0036 => Some(CanAbortCode::MaxValueLessThanMinValue),
            0x0800_0000 => Some(CanAbortCode::GeneralError),
            0x0800_0020 => Some(CanAbortCode::DataTransferOrStoreFailed),
            0x0800_0021 => Some(CanAbortCode::DataTransferOrStoreFailedDueToLocalControl),
            0x0800_0022 => Some(CanAbortCode::DataTransferOrStoreFailedDueToDeviceState),
            0x0800_0023 => Some(CanAbortCode::ObjectDictionaryGenerationFailedOrNotPresent),
            _ => None,
        }
    }
}

#[derive(Debug, Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Hash)]
pub enum CanAbortCode {
    ToggleBitNotAlternated,
    SdoProtocolTimedOut,
    CommandSpecifierNotValidOrUnknown,
    InvalidBlockSize,
    InvalidSequenceNumber,
    CRCError,
    OutOfMemory,
    UnsupportedAccessToObject,
    AttemptToReadWriteOnlyObject,
    AttemptToWriteReadOnlyObject,
    ObjectDoesNotExistInObjectDictionary,
    ObjectCannotBeMappedToPDO,
    ExceedPDOSize,
    GeneralParameterIncompatibility,
    GeneralInternalIncompatibility,
    HardwareError,
    DataTypeMismatchLengthMismatch,
    DataTypeMismatchLengthTooHigh,
    DataTypeMismatchLengthTooLow,
    SubIndexDoesNotExist,
    ValueRangeExceeded,
    ValueWrittenTooHigh,
    ValueWrittenTooLow,
    MaxValueLessThanMinValue,
    GeneralError,
    DataTransferOrStoreFailed,
    DataTransferOrStoreFailedDueToLocalControl,
    DataTransferOrStoreFailedDueToDeviceState,
    ObjectDictionaryGenerationFailedOrNotPresent,

    Other,
}
